---
integration_test:
  name: ratio_with_numerator_constraint_on_local_dimension
  description: |
    Tests querying a metric with a measure constraint on a local dimension
  model: SIMPLE_MODEL
  required_features: ["FULL_OUTER_JOIN"]
  metrics: ["instant_booking_fraction_of_max_value"]
  group_bys: ["metric_time"]
  check_query: |
    SELECT
      a.average_booking_value / b.max_booking_value AS instant_booking_fraction_of_max_value
      , COALESCE(a.ds, b.ds) AS metric_time
    FROM (
      SELECT
        CAST(AVG(booking_value) AS {{ double_data_type_name }} ) AS average_booking_value
        , ds
      FROM {{ source_schema }}.fct_bookings
      WHERE is_instant
      GROUP BY ds
    ) a
    JOIN (
      SELECT
        CAST(NULLIF(MAX(booking_value), 0) AS {{ double_data_type_name }} ) AS max_booking_value
        , ds
      FROM {{ source_schema }}.fct_bookings
      GROUP BY ds
    ) b
    ON a.ds = b.ds
---
integration_test:
  name: ratio_with_numerator_constraint_on_join_dimension
  description: |
    Tests querying a metric with a measure constraint on a dimension requiring a join
  model: SIMPLE_MODEL
  required_features: ["FULL_OUTER_JOIN"]
  metrics: ["lux_booking_fraction_of_max_value"]
  group_bys: ["metric_time"]
  check_query: |
    SELECT
      a.average_booking_value / b.max_booking_value AS lux_booking_fraction_of_max_value
      , COALESCE(a.ds, b.ds) AS metric_time
    FROM (
      SELECT
        CAST(AVG(fct_bookings.booking_value) AS {{ double_data_type_name }} ) AS average_booking_value
        , fct_bookings.ds
      FROM {{ source_schema }}.fct_bookings fct_bookings
      LEFT OUTER JOIN {{ source_schema }}.dim_listings_latest listings_latest
      ON fct_bookings.listing_id = listings_latest.listing_id
      WHERE listings_latest.is_lux
      GROUP BY fct_bookings.ds
    ) a
    JOIN (
      SELECT
        CAST(NULLIF(MAX(booking_value), 0) AS {{ double_data_type_name }} ) AS max_booking_value
        , ds
      FROM {{ source_schema }}.fct_bookings
      GROUP BY ds
    ) b
    ON a.ds = b.ds
---
integration_test:
  name: expr_with_constraint_on_join_dimension
  description: |
    Tests querying an expr metric with a measure constraint on a dimension requiring a join
  model: SIMPLE_MODEL
  required_features: ["FULL_OUTER_JOIN"]
  metrics: ["lux_booking_value_rate_expr"]
  group_bys: ["metric_time"]
  check_query: |
    SELECT
      a.average_booking_value * a.bookings / b.booking_value AS lux_booking_value_rate_expr
      , COALESCE(a.ds, b.ds) AS metric_time
    FROM (
      SELECT
        CAST(AVG(fct_bookings.booking_value) AS {{ double_data_type_name }} ) AS average_booking_value
        , SUM(1) AS bookings
        , fct_bookings.ds
      FROM {{ source_schema }}.fct_bookings fct_bookings
      LEFT OUTER JOIN {{ source_schema }}.dim_listings_latest listings_latest
      ON fct_bookings.listing_id = listings_latest.listing_id
      WHERE listings_latest.is_lux
      GROUP BY fct_bookings.ds
    ) a
    JOIN (
      SELECT
        CAST(NULLIF(SUM(booking_value), 0) AS {{ double_data_type_name }} ) AS booking_value
        , ds
      FROM {{ source_schema }}.fct_bookings
      GROUP BY ds
    ) b
    ON a.ds = b.ds
---
integration_test:
  name: ratio_with_constraint_and_repeated_measure
  description: |
    Tests querying a metric with a measure constraint on a local dimension
  model: SIMPLE_MODEL
  required_features: ["FULL_OUTER_JOIN"]
  metrics: ["instant_booking_value_ratio"]
  group_bys: ["metric_time"]
  check_query: |
    SELECT
      a.booking_value / b.booking_value AS instant_booking_value_ratio
      , COALESCE(a.ds, b.ds) AS metric_time
    FROM (
      SELECT
        CAST(SUM(booking_value) AS {{ double_data_type_name }} ) AS booking_value
        , ds
      FROM {{ source_schema }}.fct_bookings
      WHERE is_instant
      GROUP BY ds
    ) a
    JOIN (
      SELECT
        CAST(NULLIF(SUM(booking_value), 0) AS {{ double_data_type_name }} ) AS booking_value
        , ds
      FROM {{ source_schema }}.fct_bookings
      GROUP BY ds
    ) b
    ON a.ds = b.ds
---
integration_test:
  name: ratio_with_constraints_on_semi_additive_measures
  description: |
    Tests querying a metric with measure constraints on semi-additive input measures
  model: SIMPLE_MODEL
  required_features: ["FULL_OUTER_JOIN"]
  metrics: ["regional_starting_balance_ratios"]
  group_bys: ["metric_time"]
  check_query: |
    SELECT
      a.total_account_balance_first_day / b.total_account_balance_first_day AS regional_starting_balance_ratios
      , COALESCE(a.ds, b.ds) AS metric_time
    FROM (
      SELECT
        CAST(SUM(account_balance) AS {{ double_data_type_name }}) AS total_account_balance_first_day
        , fa_west_filtered.ds
      FROM (
        SELECT
          fa_west.ds
          , fa_west.ds AS metric_time
          , user_id AS user
          , account_balance
        FROM {{ source_schema }}.fct_accounts fa_west
        INNER JOIN (
          SELECT
            MIN(ds) AS ds__min
          FROM {{ source_schema }}.fct_accounts
          GROUP BY
            ds
        ) c
        ON
          fa_west.ds = c.ds__min
      ) fa_west_filtered
      LEFT OUTER JOIN {{ source_schema }}.dim_users_latest dul_west
      ON fa_west_filtered.user = dul_west.user_id
      WHERE dul_west.home_state_latest IN ('CA', 'HI', 'WA')
      GROUP BY fa_west_filtered.ds
    ) a
    JOIN (
      SELECT
        CAST(SUM(account_balance) AS {{ double_data_type_name }}) AS total_account_balance_first_day
        , fa_east_filtered.ds
      FROM (
        SELECT
          fa_east.ds
          , fa_east.ds AS metric_time
          , user_id AS user
          , account_balance
        FROM {{ source_schema }}.fct_accounts fa_east
        INNER JOIN (
          SELECT
            MIN(ds) AS ds__min
          FROM {{ source_schema }}.fct_accounts
          GROUP BY
            ds
        ) d
        ON
          fa_east.ds = d.ds__min
      ) fa_east_filtered
      LEFT OUTER JOIN {{ source_schema }}.dim_users_latest dul_east
      ON fa_east_filtered.user = dul_east.user_id
      WHERE dul_east.home_state_latest IN ('MD', 'NY', 'TX')
      GROUP BY fa_east_filtered.ds
    ) b
    ON a.ds = b.ds
---
integration_test:
  name: expr_with_single_constrained_and_aliased_measure
  description: |
    Tests querying a metric with a single input measure with constraint and alias
  model: SIMPLE_MODEL
  metrics: ["double_counted_delayed_bookings"]
  group_bys: ["metric_time"]
  check_query: |
    SELECT
      SUM(1) * 2 AS double_counted_delayed_bookings
      , ds AS metric_time
    FROM {{ source_schema }}.fct_bookings
    WHERE NOT is_instant
    GROUP BY ds
