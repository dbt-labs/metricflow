<DataflowPlan>
    <WriteToResultDataframeNode>
        <!-- description = Write to Dataframe -->
        <!-- node_id = wrd_0 -->
        <ComputeMetricsNode>
            <!-- description = Compute Metrics via Expressions -->
            <!-- node_id = cm_0 -->
            <!-- metric_spec =                   -->
            <!--   {'class': 'MetricSpec',       -->
            <!--    'element_name': 'bookings',  -->
            <!--    'constraint': None,          -->
            <!--    'alias': None,               -->
            <!--    'offset_window': None,       -->
            <!--    'offset_to_grain': None}     -->
            <AggregateMeasuresNode>
                <!-- description = Aggregate Measures -->
                <!-- node_id = am_0 -->
                <FilterElementsNode>
                    <!-- description =                            -->
                    <!--   Pass Only Elements:                    -->
                    <!--     ['bookings', 'booking__is_instant']  -->
                    <!-- node_id = pfe_1 -->
                    <!-- include_spec =                           -->
                    <!--   {'class': 'MeasureSpec',               -->
                    <!--    'element_name': 'bookings',           -->
                    <!--    'non_additive_dimension_spec': None}  -->
                    <!-- include_spec =                                                                  -->
                    <!--   {'class': 'DimensionSpec',                                                    -->
                    <!--    'element_name': 'is_instant',                                                -->
                    <!--    'entity_links': ({'class': 'EntityReference', 'element_name': 'booking'},)}  -->
                    <!-- distinct = False -->
                    <WhereConstraintNode>
                        <!-- description = Constrain Output with WHERE -->
                        <!-- node_id = wcc_0 -->
                        <!-- where_condition =                                                                            -->
                        <!--   {'class': 'WhereFilterSpec',                                                               -->
                        <!--    'where_sql': "metric_time__day >= '2020-01-01'",                                          -->
                        <!--    'bind_parameters': {'class': 'SqlBindParameters', 'param_items': ()},                     -->
                        <!--    'linkable_spec_set': {'class': 'LinkableSpecSet',                                         -->
                        <!--                          'dimension_specs': (),                                              -->
                        <!--                          'time_dimension_specs': ({'class': 'TimeDimensionSpec',             -->
                        <!--                                                    'element_name': 'metric_time',            -->
                        <!--                                                    'entity_links': (),                       -->
                        <!--                                                    'time_granularity': TimeGranularity.DAY,  -->
                        <!--                                                    'date_part': None,                        -->
                        <!--                                                    'aggregation_state': None},),             -->
                        <!--                          'entity_specs': ()}}                                                -->
                        <FilterElementsNode>
                            <!-- description =                                                -->
                            <!--   Pass Only Elements:                                        -->
                            <!--     ['bookings', 'booking__is_instant', 'metric_time__day']  -->
                            <!-- node_id = pfe_0 -->
                            <!-- include_spec =                           -->
                            <!--   {'class': 'MeasureSpec',               -->
                            <!--    'element_name': 'bookings',           -->
                            <!--    'non_additive_dimension_spec': None}  -->
                            <!-- include_spec =                                                                  -->
                            <!--   {'class': 'DimensionSpec',                                                    -->
                            <!--    'element_name': 'is_instant',                                                -->
                            <!--    'entity_links': ({'class': 'EntityReference', 'element_name': 'booking'},)}  -->
                            <!-- include_spec =                               -->
                            <!--   {'class': 'TimeDimensionSpec',             -->
                            <!--    'element_name': 'metric_time',            -->
                            <!--    'entity_links': (),                       -->
                            <!--    'time_granularity': TimeGranularity.DAY,  -->
                            <!--    'date_part': None,                        -->
                            <!--    'aggregation_state': None}                -->
                            <!-- distinct = False -->
                            <MetricTimeDimensionTransformNode>
                                <!-- description = Metric Time Dimension 'ds' -->
                                <!-- node_id = sma_10001 -->
                                <!-- aggregation_time_dimension = ds -->
                                <ReadSqlSourceNode>
                                    <!-- description =                                                                                    -->
                                    <!--   Read From SemanticModelDataSet(SemanticModelReference(semantic_model_name='bookings_source'))  -->
                                    <!-- node_id = rss_10011 -->
                                    <!-- data_set =                                                                             -->
                                    <!--   SemanticModelDataSet(SemanticModelReference(semantic_model_name='bookings_source'))  -->
                                </ReadSqlSourceNode>
                            </MetricTimeDimensionTransformNode>
                        </FilterElementsNode>
                    </WhereConstraintNode>
                </FilterElementsNode>
            </AggregateMeasuresNode>
        </ComputeMetricsNode>
    </WriteToResultDataframeNode>
</DataflowPlan>
