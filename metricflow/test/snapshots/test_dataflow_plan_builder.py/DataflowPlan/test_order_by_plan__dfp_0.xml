<DataflowPlan>
    <WriteToResultDataframeNode>
        <!-- description = 'Write to Dataframe' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <OrderByLimitNode>
            <!-- description = "Order By ['metric_time__day', 'bookings']" -->
            <!-- node_id = NodeId(id_str='obl_0') -->
            <!-- order_by_spec =                                                                        -->
            <!--   OrderBySpec(                                                                         -->
            <!--     instance_spec=TimeDimensionSpec(element_name='metric_time', time_granularity=DAY), -->
            <!--     descending=False,                                                                  -->
            <!--   )                                                                                    -->
            <!-- order_by_spec = OrderBySpec(instance_spec=MetricSpec(element_name='bookings'), descending=True) -->
            <!-- limit = 'None' -->
            <ComputeMetricsNode>
                <!-- description = 'Compute Metrics via Expressions' -->
                <!-- node_id = NodeId(id_str='cm_0') -->
                <!-- metric_spec = MetricSpec(element_name='bookings') -->
                <AggregateMeasuresNode>
                    <!-- description = 'Aggregate Measures' -->
                    <!-- node_id = NodeId(id_str='am_0') -->
                    <FilterElementsNode>
                        <!-- description = "Pass Only Elements: ['bookings', 'metric_time__day']" -->
                        <!-- node_id = NodeId(id_str='pfe_0') -->
                        <!-- include_spec = MeasureSpec(element_name='bookings') -->
                        <!-- include_spec = TimeDimensionSpec(element_name='metric_time', time_granularity=DAY) -->
                        <!-- distinct = False -->
                        <MetricTimeDimensionTransformNode>
                            <!-- description = "Metric Time Dimension 'ds'" -->
                            <!-- node_id = NodeId(id_str='sma_28002') -->
                            <!-- aggregation_time_dimension = 'ds' -->
                            <ReadSqlSourceNode>
                                <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                <!-- node_id = NodeId(id_str='rss_28014') -->
                                <!-- data_set = SemanticModelDataSet('bookings_source') -->
                            </ReadSqlSourceNode>
                        </MetricTimeDimensionTransformNode>
                    </FilterElementsNode>
                </AggregateMeasuresNode>
            </ComputeMetricsNode>
        </OrderByLimitNode>
    </WriteToResultDataframeNode>
</DataflowPlan>
