<DataflowPlan>
    <WriteToResultDataframeNode>
        <!-- description = Write to Dataframe -->
        <!-- node_id = wrd_0 -->
        <OrderByLimitNode>
            <!-- description = Order By ['metric_time__day', 'bookings'] -->
            <!-- node_id = obl_0 -->
            <!-- order_by_spec =                                                -->
            <!--   {'class': 'OrderBySpec',                                     -->
            <!--    'instance_spec': {'class': 'TimeDimensionSpec',             -->
            <!--                      'element_name': 'metric_time',            -->
            <!--                      'entity_links': (),                       -->
            <!--                      'time_granularity': TimeGranularity.DAY,  -->
            <!--                      'date_part': None,                        -->
            <!--                      'aggregation_state': None},               -->
            <!--    'descending': False}                                        -->
            <!-- order_by_spec =                                   -->
            <!--   {'class': 'OrderBySpec',                        -->
            <!--    'instance_spec': {'class': 'MetricSpec',       -->
            <!--                      'element_name': 'bookings',  -->
            <!--                      'constraint': None,          -->
            <!--                      'alias': None,               -->
            <!--                      'offset_window': None,       -->
            <!--                      'offset_to_grain': None},    -->
            <!--    'descending': True}                            -->
            <!-- limit = None -->
            <ComputeMetricsNode>
                <!-- description = Compute Metrics via Expressions -->
                <!-- node_id = cm_0 -->
                <!-- metric_spec =                   -->
                <!--   {'class': 'MetricSpec',       -->
                <!--    'element_name': 'bookings',  -->
                <!--    'constraint': None,          -->
                <!--    'alias': None,               -->
                <!--    'offset_window': None,       -->
                <!--    'offset_to_grain': None}     -->
                <AggregateMeasuresNode>
                    <!-- description = Aggregate Measures -->
                    <!-- node_id = am_0 -->
                    <FilterElementsNode>
                        <!-- description =                         -->
                        <!--   Pass Only Elements:                 -->
                        <!--     ['bookings', 'metric_time__day']  -->
                        <!-- node_id = pfe_0 -->
                        <!-- include_spec =                           -->
                        <!--   {'class': 'MeasureSpec',               -->
                        <!--    'element_name': 'bookings',           -->
                        <!--    'non_additive_dimension_spec': None}  -->
                        <!-- include_spec =                               -->
                        <!--   {'class': 'TimeDimensionSpec',             -->
                        <!--    'element_name': 'metric_time',            -->
                        <!--    'entity_links': (),                       -->
                        <!--    'time_granularity': TimeGranularity.DAY,  -->
                        <!--    'date_part': None,                        -->
                        <!--    'aggregation_state': None}                -->
                        <!-- distinct = False -->
                        <MetricTimeDimensionTransformNode>
                            <!-- description = Metric Time Dimension 'ds' -->
                            <!-- node_id = sma_10001 -->
                            <!-- aggregation_time_dimension = ds -->
                            <ReadSqlSourceNode>
                                <!-- description =                                                                                    -->
                                <!--   Read From SemanticModelDataSet(SemanticModelReference(semantic_model_name='bookings_source'))  -->
                                <!-- node_id = rss_10011 -->
                                <!-- data_set =                                                                             -->
                                <!--   SemanticModelDataSet(SemanticModelReference(semantic_model_name='bookings_source'))  -->
                            </ReadSqlSourceNode>
                        </MetricTimeDimensionTransformNode>
                    </FilterElementsNode>
                </AggregateMeasuresNode>
            </ComputeMetricsNode>
        </OrderByLimitNode>
    </WriteToResultDataframeNode>
</DataflowPlan>
