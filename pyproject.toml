[build-system]
requires = ["hatchling~=1.14.0"]
build-backend = "hatchling.build"

[project]
name = "metricflow"
version = "0.200.0.dev11"
description = "Translates a simple metric definition into reusable SQL and executes it against the SQL engine of your choice."
readme = "README.md"
requires-python = ">=3.8,<3.10"
license = "BUSL-1.1"
keywords = []
authors = [
    {name = "Transform", email = "hello@transformdata.io"}
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "Jinja2>=2.11.3",
  "MarkupSafe==2.0.1",
  "PyYAML~=6.0",
  "SQLAlchemy~=1.4.42",
  "click>=7.1.2, <8.1.4",
  "databricks-sql-connector~=2.0",
  "dbt-core==1.6.0b8",
  "dbt-semantic-interfaces==0.1.0.dev8",
  "duckdb-engine~=0.1.8",
  "duckdb==0.3.4",
  "google-auth~=2.13.0",
  "google-cloud-bigquery~=3.4.2",
  "graphviz==0.18.2",
  "halo~=0.0.31",
  "jsonschema==3.2.0",
  "mo-sql-parsing~=9.328.23003",
  "more-itertools==8.10.0",
  "numpy>=1.22.2",
  "pandas~=1.3.0",
  "psycopg2-binary~=2.9.3",
  "pydantic~=1.10.0",
  "python-dateutil==2.8.2",
  "rapidfuzz==3.0.0",
  "requests~=2.27.1",
  "ruamel.yaml~=0.17.21",
  "rudder-sdk-python~=1.0.3",
  "sqlalchemy-bigquery~=1.6.1",
  "sqlalchemy-redshift==0.8.1",
  "sqlalchemy2-stubs~=0.0.2a21",
  "tabulate~=0.8.9",
  "typing_extensions>=4.0.0",
  "update-checker~=0.18.0",
  # Below are pinned transitive dependencies that was done to patch a vulnerability"
  "cryptography~=39.0.1",
  "pyopenssl~=23.0.0",
]

[project.urls]
Documentation = "https://transform.co/metricflow"
"Source Code" = "https://github.com/transform-data/metricflow"

[project.scripts]
mf = 'metricflow.cli.main:cli'

[project.optional-dependencies]
dev-packages = [
  "mypy~=1.3.0",
  "pre-commit~=3.2.2",
  "pytest-mock~=3.7.0",
  "pytest-xdist~=3.2.1",
  "pytest~=7.1.1",
  "types-PyYAML",
  "types-jsonschema",
  "types-python-dateutil",
]

dbt-postgres = [
  "dbt-postgres>=1.6.0.b6",
]

dbt-snowflake = [
  "dbt-snowflake>=1.6.0b3",
]

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
  "/.changes",
  ".changie.yaml",
  ".gitignore",
  ".pre-commit-config.yaml",
  "CONTRIBUTING.md",
  "MAKEFILE",
  "/tests",
]

[tool.hatch.envs.dev-env]
description = "Environment for development."
features = [
  "dev-packages",
]

[tool.hatch.envs.postgres-env.env-vars]
	MF_SQL_ENGINE_URL="postgresql://metricflow@localhost:5432/metricflow"
	MF_SQL_ENGINE_PASSWORD="metricflowing"
	MF_TEST_ADAPTER_TYPE="postgres"

[tool.hatch.envs.postgres-env]
description = "Dev environment for working with Postgres adapter"
features = [
  "dev-packages",
  "dbt-postgres",
]

[tool.hatch.envs.snowflake-env.env-vars]
	MF_TEST_ADAPTER_TYPE="snowflake"
  # Note - the snowflake URL and password should be set via environment secrets
  # in the calling process

[tool.hatch.envs.snowflake-env]
description = "Dev environment for working with Snowflake adapter"
# Install the dbt snowflake package as a pre-install extra, just as with postgres
features = [
  "dev-packages",
  "dbt-snowflake",
]


# Many deprecation warnings come from 3rd-party libraries and make the
# output of pytest noisy. Since no action is going to be taken, hide those
# warnings.
[tool.pytest.ini_options]
filterwarnings = [
    "ignore:Deprecated call to.*",
    "ignore:pkg_resources is deprecated as an API"
]
python_functions = "test_* populate_source_schema"
