test_name: test_filter_spec_resolution[derived_metric_with_different_parent_time_grains]
test_filename: test_spec_lookup.py
---
FilterSpecResolutionLookUp(
  spec_resolutions=(
    FilterSpecResolution(
      lookup_key=ResolvedSpecLookUpKey(
        filter_location=WhereFilterLocation(
          location_type=QUERY,
          metric_references=(
            MetricReference(
              element_name='derived_metric_with_different_parent_time_grains',
            ),
          ),
        ),
        call_parameter_set=TimeDimensionCallParameterSet(
          time_dimension_reference=TimeDimensionReference(
            element_name='metric_time',
          ),
        ),
      ),
      where_filter_intersection=PydanticWhereFilterIntersection(
        where_filters=[
          PydanticWhereFilter(
            where_sql_template="{{ TimeDimension('metric_time') }} > '2020-01-01'",
          ),
        ],
      ),
      resolved_linkable_element_set=LinkableElementSet(
        path_key_to_linkable_dimensions={
          ElementPathKey(
            element_name='metric_time',
            element_type=TIME_DIMENSION,
            time_granularity=ExpandedTimeGranularity(
              name='year',
              base_granularity=YEAR,
            ),
          ): (
            LinkableDimension(
              properties=(
                DERIVED_TIME_GRANULARITY,
                METRIC_TIME,
              ),
              defined_in_semantic_model=SemanticModelReference(
                semantic_model_name='monthly_measures_source',
              ),
              element_name='metric_time',
              dimension_type=TIME,
              join_path=SemanticModelJoinPath(
                left_semantic_model_reference=SemanticModelReference(
                  semantic_model_name='monthly_measures_source',
                ),
              ),
              time_granularity=ExpandedTimeGranularity(
                name='year',
                base_granularity=YEAR,
              ),
            ),
            LinkableDimension(
              properties=(
                METRIC_TIME,
              ),
              defined_in_semantic_model=SemanticModelReference(
                semantic_model_name='yearly_measure_source',
              ),
              element_name='metric_time',
              dimension_type=TIME,
              join_path=SemanticModelJoinPath(
                left_semantic_model_reference=SemanticModelReference(
                  semantic_model_name='yearly_measure_source',
                ),
              ),
              time_granularity=ExpandedTimeGranularity(
                name='year',
                base_granularity=YEAR,
              ),
            ),
          ),
        },
      ),
      spec_pattern=TimeDimensionPattern(
        parameter_set=SpecPatternParameterSet(
          fields_to_compare=(DATE_PART, ELEMENT_NAME, ENTITY_LINKS),
          element_name='metric_time',
        ),
      ),
      filter_location_path=MetricFlowQueryResolutionPath(
        resolution_path_nodes=(QueryGroupByItemResolutionNode(node_id=qr_5),),
      ),
      object_builder_str="TimeDimension('metric_time')",
    ),
  ),
)
