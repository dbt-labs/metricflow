test_name: test_simple_metric_with_defined_metric_time_filter
test_filename: test_metric_time_granularity.py
docstring:
  Tests that a simple metric's metric_time filter defined in its YAML uses metric's default granularity.
---
MetricFlowQuerySpec(
  metric_specs=(MetricSpec(element_name='simple_metric_with_default_time_granularity_and_metric_time_filter'),),
  filter_intersection=PydanticWhereFilterIntersection(),
  filter_spec_resolution_lookup=FilterSpecResolutionLookUp(
    spec_resolutions=(
      FilterSpecResolution(
        lookup_key=ResolvedSpecLookUpKey(
          filter_location=WhereFilterLocation(
            location_type=METRIC,
            metric_references=(
              MetricReference(
                element_name='simple_metric_with_default_time_granularity_and_metric_time_filter',
              ),
            ),
          ),
          call_parameter_set=TimeDimensionCallParameterSet(
            time_dimension_reference=TimeDimensionReference(
              element_name='metric_time',
            ),
          ),
        ),
        where_filter_intersection=PydanticWhereFilterIntersection(
          where_filters=[
            PydanticWhereFilter(
              where_sql_template=('{{ '
               "TimeDimension('metric_time') "
               '}} '
               '> '
               "'2020-01-01'\n"),
            ),
          ],
        ),
        resolved_linkable_element_set=AnnotatedSpecLinkableElementSet(
          annotated_specs=(
            AnnotatedSpec(
              element_type=TIME_DIMENSION,
              element_name='metric_time',
              time_grain=ExpandedTimeGranularity(
                name='quarter',
                base_granularity=QUARTER,
              ),
              element_properties=(
                METRIC_TIME,
                DERIVED_TIME_GRANULARITY,
              ),
              origin_semantic_model_names=(
                'monthly_measures_source',
              ),
              derived_from_semantic_model_names=(
                'monthly_measures_source',
              ),
            ),
          ),
        ),
        spec_pattern=TimeDimensionPattern(
          parameter_set=SpecPatternParameterSet(
            fields_to_compare=(
              DATE_PART,
              ELEMENT_NAME,
              ENTITY_LINKS,
            ),
            element_name='metric_time',
          ),
        ),
        filter_location_path=MetricFlowQueryResolutionPath(
          resolution_path_nodes=(
            QueryGroupByItemResolutionNode(node_id=qr_1),
            MetricGroupByItemResolutionNode(node_id=mtr_0),
          ),
        ),
        object_builder_str="TimeDimension('metric_time')",
      ),
    ),
  ),
  min_max_only=False,
  apply_group_by=True,
  spec_output_order=(MetricSpec(element_name='simple_metric_with_default_time_granularity_and_metric_time_filter'),),
)
