name: MetricFlow Unit Tests (CI)
on:
  pull_request:
    # run these jobs when a PR is opened, reopened, or updated (synchronize)
    # synchronize = commit(s) pushed to the pull request
    types:
      - opened
      - reopened
      - synchronize
jobs:
  metricflow-unit-tests-duckdb:
    name: MetricFlow Unit Tests - DuckDB
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - name: Check-out the repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.pythonLocation }}
            ~/.cache/pypoetry
          key: ${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}-ubuntu-latest-22.04

      - name: Install Poetry
        run: pip install poetry

      - name: Install Metricflow
        run: poetry install -E dbt-cloud

      - name: Run MetricFlow Unit tests suites
        run: poetry run pytest metricflow/test
        env:
          METRICFLOW_CLIENT_EMAIL: ci-tester@gmail.com
  metricflow-unit-tests-postgres:
    name: MetricFlow Unit Tests - PostgreSQL
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: metricflow
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check-out the repo
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - uses: actions/cache@v3
        with:
          path: |
            ${{ env.pythonLocation }}
            ~/.cache/pypoetry
          key: ${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}-ubuntu-latest-22.04

      - name: Install Poetry
        run: pip install poetry

      - name: Install Deps
        run: cd metricflow && poetry install -E dbt-cloud

      - name: Run MetricFlow unit tests with PostgreSQL configs
        run: poetry run pytest metricflow/test/
        env:
          MF_SQL_ENGINE_URL: postgresql://postgres@localhost:5432/metricflow
          MF_SQL_ENGINE_PASSWORD: postgres
  metricflow-unit-tests:
    name: MetricFlow Unit Tests
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [metricflow-unit-tests-duckdb, metricflow-unit-tests-postgres]

    steps:
      - name: Check success
        run: test ${{ needs.metricflow-unit-tests-duckdb.result }} = 'success' -a ${{ needs.metricflow-unit-tests-postgres.result }} = 'success'
