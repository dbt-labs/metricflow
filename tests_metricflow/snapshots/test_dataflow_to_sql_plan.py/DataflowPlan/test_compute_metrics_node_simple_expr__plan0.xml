test_name: test_compute_metrics_node_simple_expr
test_filename: test_dataflow_to_sql_plan.py
docstring:
  Tests the compute metrics node for expr type metrics sourced from a single simple-metric input.
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <ComputeMetricsNode>
            <!-- description = 'Compute Metrics via Expressions' -->
            <!-- node_id = NodeId(id_str='cm_0') -->
            <!-- metric_spec = MetricSpec(element_name='booking_fees') -->
            <AggregateSimpleMetricInputsNode>
                <!-- description = 'Aggregate Inputs for Simple Metrics' -->
                <!-- node_id = NodeId(id_str='am_0') -->
                <!-- alias_mapping = {} -->
                <!-- null_fill_value_mapping = {} -->
                <JoinOnEntitiesNode>
                    <!-- description = 'Join Standard Outputs' -->
                    <!-- node_id = NodeId(id_str='jso_0') -->
                    <!-- join0_for_node_id_pfe_1 =                                      -->
                    <!--   JoinDescription(                                             -->
                    <!--     join_node=FilterElementsNode(node_id=pfe_1),               -->
                    <!--     join_on_entity=LinklessEntitySpec(element_name='listing'), -->
                    <!--     join_type=LEFT_OUTER,                                      -->
                    <!--   )                                                            -->
                    <FilterElementsNode>
                        <!-- description = "Pass Only Elements: ['booking_value', 'listing']" -->
                        <!-- node_id = NodeId(id_str='pfe_0') -->
                        <!-- include_spec = SimpleMetricInputSpec(element_name='booking_value') -->
                        <!-- include_spec = LinklessEntitySpec(element_name='listing') -->
                        <!-- distinct = False -->
                        <ReadSqlSourceNode>
                            <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                            <!-- node_id = NodeId(id_str='rss_28001') -->
                            <!-- data_set = SemanticModelDataSet('bookings_source') -->
                        </ReadSqlSourceNode>
                    </FilterElementsNode>
                    <FilterElementsNode>
                        <!-- description = "Pass Only Elements: ['country_latest', 'listing']" -->
                        <!-- node_id = NodeId(id_str='pfe_1') -->
                        <!-- include_spec = DimensionSpec(element_name='country_latest') -->
                        <!-- include_spec = LinklessEntitySpec(element_name='listing') -->
                        <!-- distinct = False -->
                        <ReadSqlSourceNode>
                            <!-- description = "Read From SemanticModelDataSet('listings_latest')" -->
                            <!-- node_id = NodeId(id_str='rss_28005') -->
                            <!-- data_set = SemanticModelDataSet('listings_latest') -->
                        </ReadSqlSourceNode>
                    </FilterElementsNode>
                </JoinOnEntitiesNode>
            </AggregateSimpleMetricInputsNode>
        </ComputeMetricsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
