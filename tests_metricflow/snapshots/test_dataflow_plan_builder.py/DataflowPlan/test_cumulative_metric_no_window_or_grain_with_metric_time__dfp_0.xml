test_name: test_cumulative_metric_no_window_or_grain_with_metric_time
test_filename: test_dataflow_plan_builder.py
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <ComputeMetricsNode>
            <!-- description = 'Compute Metrics via Expressions' -->
            <!-- node_id = NodeId(id_str='cm_1') -->
            <!-- metric_spec = MetricSpec(element_name='revenue_all_time') -->
            <ComputeMetricsNode>
                <!-- description = 'Compute Metrics via Expressions' -->
                <!-- node_id = NodeId(id_str='cm_0') -->
                <!-- metric_spec = MetricSpec(element_name='revenue') -->
                <AggregateSimpleMetricInputsNode>
                    <!-- description = 'Aggregate Inputs for Simple Metrics' -->
                    <!-- node_id = NodeId(id_str='am_0') -->
                    <!-- alias_mapping = {} -->
                    <!-- null_fill_value_mapping = {} -->
                    <FilterElementsNode>
                        <!-- description = "Pass Only Elements: ['revenue', 'metric_time__day']" -->
                        <!-- node_id = NodeId(id_str='pfe_0') -->
                        <!-- include_spec = SimpleMetricInputSpec(element_name='revenue') -->
                        <!-- include_spec =                                                                  -->
                        <!--   TimeDimensionSpec(                                                            -->
                        <!--     element_name='metric_time',                                                 -->
                        <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                        <!--   )                                                                             -->
                        <!-- distinct = False -->
                        <JoinOverTimeRangeNode>
                            <!-- description = 'Join Self Over Time Range' -->
                            <!-- node_id = NodeId(id_str='jotr_0') -->
                            <!-- queried_agg_time_dimension_specs =                                                -->
                            <!--   (                                                                               -->
                            <!--     TimeDimensionSpec(                                                            -->
                            <!--       element_name='metric_time',                                                 -->
                            <!--       time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                            <!--     ),                                                                            -->
                            <!--   )                                                                               -->
                            <MetricTimeDimensionTransformNode>
                                <!-- description = "Metric Time Dimension 'ds'" -->
                                <!-- node_id = NodeId(id_str='sma_28015') -->
                                <!-- aggregation_time_dimension = 'ds' -->
                                <ReadSqlSourceNode>
                                    <!-- description = "Read From SemanticModelDataSet('revenue')" -->
                                    <!-- node_id = NodeId(id_str='rss_28026') -->
                                    <!-- data_set = SemanticModelDataSet('revenue') -->
                                </ReadSqlSourceNode>
                            </MetricTimeDimensionTransformNode>
                        </JoinOverTimeRangeNode>
                    </FilterElementsNode>
                </AggregateSimpleMetricInputsNode>
            </ComputeMetricsNode>
        </ComputeMetricsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
