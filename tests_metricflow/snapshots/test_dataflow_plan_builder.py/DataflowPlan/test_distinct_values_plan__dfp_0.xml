test_name: test_distinct_values_plan
test_filename: test_dataflow_plan_builder.py
docstring:
  Tests a plan to get distinct values of a dimension.
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <OrderByLimitNode>
            <!-- description = "Order By ['listing__country_latest'] Limit 100" -->
            <!-- node_id = NodeId(id_str='obl_0') -->
            <!-- order_by_spec =                                                -->
            <!--   OrderBySpec(                                                 -->
            <!--     instance_spec=DimensionSpec(                               -->
            <!--       element_name='country_latest',                           -->
            <!--       entity_links=(EntityReference(element_name='listing'),), -->
            <!--     ),                                                         -->
            <!--     descending=True,                                           -->
            <!--   )                                                            -->
            <!-- limit = '100' -->
            <FilterElementsNode>
                <!-- description = "Pass Only Elements: ['listing__country_latest']" -->
                <!-- node_id = NodeId(id_str='pfe_0') -->
                <!-- include_spec =                                               -->
                <!--   DimensionSpec(                                             -->
                <!--     element_name='country_latest',                           -->
                <!--     entity_links=(EntityReference(element_name='listing'),), -->
                <!--   )                                                          -->
                <!-- distinct = True -->
                <WhereConstraintNode>
                    <!-- description = 'Constrain Output with WHERE' -->
                    <!-- node_id = NodeId(id_str='wcc_0') -->
                    <!-- where_condition =                                                 -->
                    <!--   WhereFilterSpec(                                                -->
                    <!--     where_sql="listing__country_latest = 'us'",                   -->
                    <!--     bind_parameters=SqlBindParameterSet(),                        -->
                    <!--     element_set=AnnotatedSpecLinkableElementSet(                  -->
                    <!--       annotated_specs=(                                           -->
                    <!--         AnnotatedSpec(                                            -->
                    <!--           element_type=DIMENSION,                                 -->
                    <!--           element_name='country_latest',                          -->
                    <!--           entity_link_names=('listing',),                         -->
                    <!--           element_properties=(LOCAL,),                            -->
                    <!--           origin_semantic_model_names=('listings_latest',),       -->
                    <!--           derived_from_semantic_model_names=('listings_latest',), -->
                    <!--         ),                                                        -->
                    <!--       ),                                                          -->
                    <!--     ),                                                            -->
                    <!--   )                                                               -->
                    <ReadSqlSourceNode>
                        <!-- description = "Read From SemanticModelDataSet('listings_latest')" -->
                        <!-- node_id = NodeId(id_str='rss_28024') -->
                        <!-- data_set = SemanticModelDataSet('listings_latest') -->
                    </ReadSqlSourceNode>
                </WhereConstraintNode>
            </FilterElementsNode>
        </OrderByLimitNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
