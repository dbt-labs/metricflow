test_name: test_where_constrained_plan_time_dimension
test_filename: test_dataflow_plan_builder.py
docstring:
  Tests a simple plan getting a metric and a local dimension.
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <ComputeMetricsNode>
            <!-- description = 'Compute Metrics via Expressions' -->
            <!-- node_id = NodeId(id_str='cm_0') -->
            <!-- metric_spec =                                           -->
            <!--   MetricSpec(                                           -->
            <!--     element_name='bookings',                            -->
            <!--     filter_spec_set=WhereFilterSpecSet(                 -->
            <!--       query_level_filter_specs=(                        -->
            <!--         WhereFilterSpec(                                -->
            <!--           where_sql="metric_time__day >= '2020-01-01'", -->
            <!--           bind_parameters=SqlBindParameterSet(),        -->
            <!--           element_set=AnnotatedSpecLinkableElementSet(  -->
            <!--             annotated_specs=(                           -->
            <!--               AnnotatedSpec(                            -->
            <!--                 element_type=TIME_DIMENSION,            -->
            <!--                 element_name='metric_time',             -->
            <!--                 time_grain=ExpandedTimeGranularity(     -->
            <!--                   name='day',                           -->
            <!--                   base_granularity=DAY,                 -->
            <!--                 ),                                      -->
            <!--                 element_properties=(                    -->
            <!--                   METRIC_TIME,                          -->
            <!--                 ),                                      -->
            <!--                 origin_semantic_model_names=(           -->
            <!--                   '__VIRTUAL__',                        -->
            <!--                 ),                                      -->
            <!--                 source_semantic_model_names=(           -->
            <!--                   'bookings_source',                    -->
            <!--                 ),                                      -->
            <!--               ),                                        -->
            <!--             ),                                          -->
            <!--           ),                                            -->
            <!--         ),                                              -->
            <!--       ),                                                -->
            <!--     ),                                                  -->
            <!--   )                                                     -->
            <AggregateMeasuresNode>
                <!-- description = 'Aggregate Measures' -->
                <!-- node_id = NodeId(id_str='am_0') -->
                <FilterElementsNode>
                    <!-- description = "Pass Only Elements: ['bookings', 'booking__is_instant']" -->
                    <!-- node_id = NodeId(id_str='pfe_0') -->
                    <!-- include_spec = MeasureSpec(element_name='bookings') -->
                    <!-- include_spec =                                               -->
                    <!--   DimensionSpec(                                             -->
                    <!--     element_name='is_instant',                               -->
                    <!--     entity_links=(EntityReference(element_name='booking'),), -->
                    <!--   )                                                          -->
                    <!-- distinct = False -->
                    <WhereConstraintNode>
                        <!-- description = 'Constrain Output with WHERE' -->
                        <!-- node_id = NodeId(id_str='wcc_0') -->
                        <!-- where_condition =                                           -->
                        <!--   WhereFilterSpec(                                          -->
                        <!--     where_sql="metric_time__day >= '2020-01-01'",           -->
                        <!--     bind_parameters=SqlBindParameterSet(),                  -->
                        <!--     element_set=AnnotatedSpecLinkableElementSet(            -->
                        <!--       annotated_specs=(                                     -->
                        <!--         AnnotatedSpec(                                      -->
                        <!--           element_type=TIME_DIMENSION,                      -->
                        <!--           element_name='metric_time',                       -->
                        <!--           time_grain=ExpandedTimeGranularity(               -->
                        <!--             name='day',                                     -->
                        <!--             base_granularity=DAY,                           -->
                        <!--           ),                                                -->
                        <!--           element_properties=(METRIC_TIME,),                -->
                        <!--           origin_semantic_model_names=('__VIRTUAL__',),     -->
                        <!--           source_semantic_model_names=('bookings_source',), -->
                        <!--         ),                                                  -->
                        <!--       ),                                                    -->
                        <!--     ),                                                      -->
                        <!--   )                                                         -->
                        <MetricTimeDimensionTransformNode>
                            <!-- description = "Metric Time Dimension 'ds'" -->
                            <!-- node_id = NodeId(id_str='sma_28009') -->
                            <!-- aggregation_time_dimension = 'ds' -->
                            <ReadSqlSourceNode>
                                <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                <!-- node_id = NodeId(id_str='rss_28020') -->
                                <!-- data_set = SemanticModelDataSet('bookings_source') -->
                            </ReadSqlSourceNode>
                        </MetricTimeDimensionTransformNode>
                    </WhereConstraintNode>
                </FilterElementsNode>
            </AggregateMeasuresNode>
        </ComputeMetricsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
