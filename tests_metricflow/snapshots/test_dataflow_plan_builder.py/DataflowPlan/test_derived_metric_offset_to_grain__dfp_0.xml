test_name: test_derived_metric_offset_to_grain
test_filename: test_dataflow_plan_builder.py
docstring:
  Tests a simple plan getting a metric and a local dimension.
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <ComputeMetricsNode>
            <!-- description = 'Compute Metrics via Expressions' -->
            <!-- node_id = NodeId(id_str='cm_2') -->
            <!-- metric_spec = MetricSpec(element_name='bookings_growth_since_start_of_month') -->
            <CombineAggregatedOutputsNode>
                <!-- description = 'Combine Aggregated Outputs' -->
                <!-- node_id = NodeId(id_str='cao_0') -->
                <ComputeMetricsNode>
                    <!-- description = 'Compute Metrics via Expressions' -->
                    <!-- node_id = NodeId(id_str='cm_0') -->
                    <!-- metric_spec = MetricSpec(element_name='bookings') -->
                    <AggregateSimpleMetricInputsNode>
                        <!-- description = 'Aggregate Inputs for Simple Metrics' -->
                        <!-- node_id = NodeId(id_str='am_0') -->
                        <!-- alias_mapping = {} -->
                        <!-- null_fill_value_mapping = {} -->
                        <FilterElementsNode>
                            <!-- description = "Pass Only Elements: ['bookings', 'metric_time__day']" -->
                            <!-- node_id = NodeId(id_str='pfe_0') -->
                            <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
                            <!-- include_spec =                                                                  -->
                            <!--   TimeDimensionSpec(                                                            -->
                            <!--     element_name='metric_time',                                                 -->
                            <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                            <!--   )                                                                             -->
                            <!-- distinct = False -->
                            <MetricTimeDimensionTransformNode>
                                <!-- description = "Metric Time Dimension 'ds'" -->
                                <!-- node_id = NodeId(id_str='sma_28009') -->
                                <!-- aggregation_time_dimension = 'ds' -->
                                <ReadSqlSourceNode>
                                    <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                    <!-- node_id = NodeId(id_str='rss_28020') -->
                                    <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                </ReadSqlSourceNode>
                            </MetricTimeDimensionTransformNode>
                        </FilterElementsNode>
                    </AggregateSimpleMetricInputsNode>
                </ComputeMetricsNode>
                <ComputeMetricsNode>
                    <!-- description = 'Compute Metrics via Expressions' -->
                    <!-- node_id = NodeId(id_str='cm_1') -->
                    <!-- metric_spec =                                                                                    -->
                    <!--   MetricSpec(element_name='bookings', alias='bookings_at_start_of_month', offset_to_grain=MONTH) -->
                    <AggregateSimpleMetricInputsNode>
                        <!-- description = 'Aggregate Inputs for Simple Metrics' -->
                        <!-- node_id = NodeId(id_str='am_1') -->
                        <!-- alias_mapping = {'bookings': 'bookings_at_start_of_month'} -->
                        <!-- null_fill_value_mapping = {} -->
                        <FilterElementsNode>
                            <!-- description = "Pass Only Elements: ['bookings', 'metric_time__day']" -->
                            <!-- node_id = NodeId(id_str='pfe_2') -->
                            <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
                            <!-- include_spec =                                                                  -->
                            <!--   TimeDimensionSpec(                                                            -->
                            <!--     element_name='metric_time',                                                 -->
                            <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                            <!--   )                                                                             -->
                            <!-- distinct = False -->
                            <JoinToTimeSpineNode>
                                <!-- description = 'Join to Time Spine Dataset' -->
                                <!-- node_id = NodeId(id_str='jts_0') -->
                                <!-- requested_agg_time_dimension_specs =                                              -->
                                <!--   (                                                                               -->
                                <!--     TimeDimensionSpec(                                                            -->
                                <!--       element_name='metric_time',                                                 -->
                                <!--       time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                                <!--     ),                                                                            -->
                                <!--   )                                                                               -->
                                <!-- join_on_time_dimension_spec =                                                   -->
                                <!--   TimeDimensionSpec(                                                            -->
                                <!--     element_name='metric_time',                                                 -->
                                <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                                <!--   )                                                                             -->
                                <!-- join_type = INNER -->
                                <!-- offset_to_grain = MONTH -->
                                <MetricTimeDimensionTransformNode>
                                    <!-- description = "Metric Time Dimension 'ds'" -->
                                    <!-- node_id = NodeId(id_str='sma_28009') -->
                                    <!-- aggregation_time_dimension = 'ds' -->
                                    <ReadSqlSourceNode>
                                        <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                        <!-- node_id = NodeId(id_str='rss_28020') -->
                                        <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                    </ReadSqlSourceNode>
                                </MetricTimeDimensionTransformNode>
                                <FilterElementsNode>
                                    <!-- description = "Pass Only Elements: ['metric_time__day']" -->
                                    <!-- node_id = NodeId(id_str='pfe_1') -->
                                    <!-- include_spec =                                                                  -->
                                    <!--   TimeDimensionSpec(                                                            -->
                                    <!--     element_name='metric_time',                                                 -->
                                    <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                                    <!--   )                                                                             -->
                                    <!-- distinct = False -->
                                    <AliasSpecsNode>
                                        <!-- description = 'Change Column Aliases' -->
                                        <!-- node_id = NodeId(id_str='as_0') -->
                                        <!-- change_specs =                                    -->
                                        <!--   (                                               -->
                                        <!--     SpecToAlias(                                  -->
                                        <!--       input_spec=TimeDimensionSpec(               -->
                                        <!--         element_name='ds',                        -->
                                        <!--         time_granularity=ExpandedTimeGranularity( -->
                                        <!--           name='day',                             -->
                                        <!--           base_granularity=DAY,                   -->
                                        <!--         ),                                        -->
                                        <!--       ),                                          -->
                                        <!--       output_spec=TimeDimensionSpec(              -->
                                        <!--         element_name='metric_time',               -->
                                        <!--         time_granularity=ExpandedTimeGranularity( -->
                                        <!--           name='day',                             -->
                                        <!--           base_granularity=DAY,                   -->
                                        <!--         ),                                        -->
                                        <!--       ),                                          -->
                                        <!--     ),                                            -->
                                        <!--   )                                               -->
                                        <ReadSqlSourceNode>
                                            <!-- description = 'Read From SqlDataSet()' -->
                                            <!-- node_id = NodeId(id_str='rss_28018') -->
                                            <!-- data_set = SqlDataSet() -->
                                        </ReadSqlSourceNode>
                                    </AliasSpecsNode>
                                </FilterElementsNode>
                            </JoinToTimeSpineNode>
                        </FilterElementsNode>
                    </AggregateSimpleMetricInputsNode>
                </ComputeMetricsNode>
            </CombineAggregatedOutputsNode>
        </ComputeMetricsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
