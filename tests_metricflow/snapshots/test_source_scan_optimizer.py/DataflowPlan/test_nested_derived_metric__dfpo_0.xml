test_name: test_nested_derived_metric
test_filename: test_source_scan_optimizer.py
docstring:
  Tests optimization of a query that use a nested derived metric from a single semantic model.

      The optimal solution would reduce this to 1 source scan, but there are challenges with derived metrics e.g. aliases,
      so that is left as a future improvement.
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_1') -->
        <ComputeMetricsNode>
            <!-- description = 'Compute Metrics via Expressions' -->
            <!-- node_id = NodeId(id_str='cm_11') -->
            <!-- metric_spec =                                                                                             -->
            <!--   MetricSpec(element_name='instant_plus_non_referred_bookings_pct', filter_spec_set=WhereFilterSpecSet()) -->
            <CombineAggregatedOutputsNode>
                <!-- description = 'Combine Aggregated Outputs' -->
                <!-- node_id = NodeId(id_str='cao_2') -->
                <ComputeMetricsNode>
                    <!-- description = 'Compute Metrics via Expressions' -->
                    <!-- node_id = NodeId(id_str='cm_8') -->
                    <!-- metric_spec =                                 -->
                    <!--   MetricSpec(                                 -->
                    <!--     element_name='non_referred_bookings_pct', -->
                    <!--     filter_spec_set=WhereFilterSpecSet(),     -->
                    <!--     alias='non_referred',                     -->
                    <!--   )                                           -->
                    <ComputeMetricsNode>
                        <!-- description = 'Compute Metrics via Expressions' -->
                        <!-- node_id = NodeId(id_str='cm_7') -->
                        <!-- metric_spec =                             -->
                        <!--   MetricSpec(                             -->
                        <!--     element_name='referred_bookings',     -->
                        <!--     filter_spec_set=WhereFilterSpecSet(), -->
                        <!--     alias='ref_bookings',                 -->
                        <!--   )                                       -->
                        <!-- metric_spec = MetricSpec(element_name='bookings', filter_spec_set=WhereFilterSpecSet()) -->
                        <AggregateMeasuresNode>
                            <!-- description = 'Aggregate Measures' -->
                            <!-- node_id = NodeId(id_str='am_3') -->
                            <FilterElementsNode>
                                <!-- description =                                                                 -->
                                <!--   "Pass Only Elements: ['referred_bookings', 'bookings', 'metric_time__day']" -->
                                <!-- node_id = NodeId(id_str='pfe_3') -->
                                <!-- include_spec = MeasureSpec(element_name='referred_bookings') -->
                                <!-- include_spec = MeasureSpec(element_name='bookings') -->
                                <!-- include_spec =                                                                  -->
                                <!--   TimeDimensionSpec(                                                            -->
                                <!--     element_name='metric_time',                                                 -->
                                <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                                <!--   )                                                                             -->
                                <!-- distinct = False -->
                                <MetricTimeDimensionTransformNode>
                                    <!-- description = "Metric Time Dimension 'ds'" -->
                                    <!-- node_id = NodeId(id_str='sma_0') -->
                                    <!-- aggregation_time_dimension = 'ds' -->
                                    <ReadSqlSourceNode>
                                        <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                        <!-- node_id = NodeId(id_str='rss_0') -->
                                        <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                    </ReadSqlSourceNode>
                                </MetricTimeDimensionTransformNode>
                            </FilterElementsNode>
                        </AggregateMeasuresNode>
                    </ComputeMetricsNode>
                </ComputeMetricsNode>
                <ComputeMetricsNode>
                    <!-- description = 'Compute Metrics via Expressions' -->
                    <!-- node_id = NodeId(id_str='cm_10') -->
                    <!-- metric_spec =                             -->
                    <!--   MetricSpec(                             -->
                    <!--     element_name='instant_bookings',      -->
                    <!--     filter_spec_set=WhereFilterSpecSet(), -->
                    <!--     alias='instant',                      -->
                    <!--   )                                       -->
                    <!-- metric_spec = MetricSpec(element_name='bookings', filter_spec_set=WhereFilterSpecSet()) -->
                    <AggregateMeasuresNode>
                        <!-- description = 'Aggregate Measures' -->
                        <!-- node_id = NodeId(id_str='am_4') -->
                        <FilterElementsNode>
                            <!-- description =                                                                -->
                            <!--   "Pass Only Elements: ['instant_bookings', 'bookings', 'metric_time__day']" -->
                            <!-- node_id = NodeId(id_str='pfe_4') -->
                            <!-- include_spec = MeasureSpec(element_name='instant_bookings') -->
                            <!-- include_spec = MeasureSpec(element_name='bookings') -->
                            <!-- include_spec =                                                                  -->
                            <!--   TimeDimensionSpec(                                                            -->
                            <!--     element_name='metric_time',                                                 -->
                            <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                            <!--   )                                                                             -->
                            <!-- distinct = False -->
                            <MetricTimeDimensionTransformNode>
                                <!-- description = "Metric Time Dimension 'ds'" -->
                                <!-- node_id = NodeId(id_str='sma_1') -->
                                <!-- aggregation_time_dimension = 'ds' -->
                                <ReadSqlSourceNode>
                                    <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                    <!-- node_id = NodeId(id_str='rss_1') -->
                                    <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                </ReadSqlSourceNode>
                            </MetricTimeDimensionTransformNode>
                        </FilterElementsNode>
                    </AggregateMeasuresNode>
                </ComputeMetricsNode>
            </CombineAggregatedOutputsNode>
        </ComputeMetricsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
