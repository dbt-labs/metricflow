test_name: test_2_ratio_metrics_from_1_semantic_model
test_filename: test_source_scan_optimizer.py
docstring:
  Tests that 2 ratio metrics with measures from a 1 semantic model result in 1 scan.
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_1') -->
        <ComputeMetricsNode>
            <!-- description = 'Compute Metrics via Expressions' -->
            <!-- node_id = NodeId(id_str='cm_14') -->
            <!-- metric_spec = MetricSpec(element_name='bookings_per_booker', filter_spec_set=WhereFilterSpecSet()) -->
            <!-- metric_spec = MetricSpec(element_name='bookings_per_dollar', filter_spec_set=WhereFilterSpecSet()) -->
            <ComputeMetricsNode>
                <!-- description = 'Compute Metrics via Expressions' -->
                <!-- node_id = NodeId(id_str='cm_13') -->
                <!-- metric_spec = MetricSpec(element_name='bookings', filter_spec_set=WhereFilterSpecSet()) -->
                <!-- metric_spec = MetricSpec(element_name='bookers', filter_spec_set=WhereFilterSpecSet()) -->
                <!-- metric_spec = MetricSpec(element_name='booking_value', filter_spec_set=WhereFilterSpecSet()) -->
                <AggregateMeasuresNode>
                    <!-- description = 'Aggregate Measures' -->
                    <!-- node_id = NodeId(id_str='am_9') -->
                    <FilterElementsNode>
                        <!-- description =                                                                        -->
                        <!--   "Pass Only Elements: ['bookings', 'bookers', 'booking_value', 'metric_time__day']" -->
                        <!-- node_id = NodeId(id_str='pfe_9') -->
                        <!-- include_spec = MeasureSpec(element_name='bookings') -->
                        <!-- include_spec = MeasureSpec(element_name='bookers') -->
                        <!-- include_spec = MeasureSpec(element_name='booking_value') -->
                        <!-- include_spec =                                                                  -->
                        <!--   TimeDimensionSpec(                                                            -->
                        <!--     element_name='metric_time',                                                 -->
                        <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                        <!--   )                                                                             -->
                        <!-- distinct = False -->
                        <MetricTimeDimensionTransformNode>
                            <!-- description = "Metric Time Dimension 'ds'" -->
                            <!-- node_id = NodeId(id_str='sma_6') -->
                            <!-- aggregation_time_dimension = 'ds' -->
                            <ReadSqlSourceNode>
                                <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                <!-- node_id = NodeId(id_str='rss_6') -->
                                <!-- data_set = SemanticModelDataSet('bookings_source') -->
                            </ReadSqlSourceNode>
                        </MetricTimeDimensionTransformNode>
                    </FilterElementsNode>
                </AggregateMeasuresNode>
            </ComputeMetricsNode>
        </ComputeMetricsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
