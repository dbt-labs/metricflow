test_name: test_derived_metric_same_alias_components_combined
test_filename: test_source_scan_optimizer.py
docstring:
  Tests optimization of querying 2 metrics which give the same alias to the same thing in their components.

      In this case we DO combine source nodes, since the components are the same exact thing so we don't need to
      scan over it twice
---
<DataflowPlan>
    <WriteToResultDataTableNode>
        <!-- description = 'Write to DataTable' -->
        <!-- node_id = NodeId(id_str='wrd_0') -->
        <CombineAggregatedOutputsNode>
            <!-- description = 'Combine Aggregated Outputs' -->
            <!-- node_id = NodeId(id_str='cao_0') -->
            <ComputeMetricsNode>
                <!-- description = 'Compute Metrics via Expressions' -->
                <!-- node_id = NodeId(id_str='cm_1') -->
                <!-- metric_spec = MetricSpec(element_name='derived_shared_alias_1a') -->
                <ComputeMetricsNode>
                    <!-- description = 'Compute Metrics via Expressions' -->
                    <!-- node_id = NodeId(id_str='cm_0') -->
                    <!-- metric_spec = MetricSpec(element_name='bookings', alias='shared_alias') -->
                    <AggregateSimpleMetricInputsNode>
                        <!-- description = 'Aggregate Measures' -->
                        <!-- node_id = NodeId(id_str='am_0') -->
                        <!-- alias_mapping = {'bookings': 'shared_alias'} -->
                        <!-- null_fill_value_mapping = {} -->
                        <FilterElementsNode>
                            <!-- description = "Pass Only Elements: ['bookings', 'booking__is_instant']" -->
                            <!-- node_id = NodeId(id_str='pfe_0') -->
                            <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
                            <!-- include_spec =                                               -->
                            <!--   DimensionSpec(                                             -->
                            <!--     element_name='is_instant',                               -->
                            <!--     entity_links=(EntityReference(element_name='booking'),), -->
                            <!--   )                                                          -->
                            <!-- distinct = False -->
                            <MetricTimeDimensionTransformNode>
                                <!-- description = "Metric Time Dimension 'ds'" -->
                                <!-- node_id = NodeId(id_str='sma_28009') -->
                                <!-- aggregation_time_dimension = 'ds' -->
                                <ReadSqlSourceNode>
                                    <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                    <!-- node_id = NodeId(id_str='rss_28020') -->
                                    <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                </ReadSqlSourceNode>
                            </MetricTimeDimensionTransformNode>
                        </FilterElementsNode>
                    </AggregateSimpleMetricInputsNode>
                </ComputeMetricsNode>
            </ComputeMetricsNode>
            <ComputeMetricsNode>
                <!-- description = 'Compute Metrics via Expressions' -->
                <!-- node_id = NodeId(id_str='cm_2') -->
                <!-- metric_spec = MetricSpec(element_name='derived_shared_alias_1b') -->
                <ComputeMetricsNode>
                    <!-- description = 'Compute Metrics via Expressions' -->
                    <!-- node_id = NodeId(id_str='cm_0') -->
                    <!-- metric_spec = MetricSpec(element_name='bookings', alias='shared_alias') -->
                    <AggregateSimpleMetricInputsNode>
                        <!-- description = 'Aggregate Measures' -->
                        <!-- node_id = NodeId(id_str='am_0') -->
                        <!-- alias_mapping = {'bookings': 'shared_alias'} -->
                        <!-- null_fill_value_mapping = {} -->
                        <FilterElementsNode>
                            <!-- description = "Pass Only Elements: ['bookings', 'booking__is_instant']" -->
                            <!-- node_id = NodeId(id_str='pfe_0') -->
                            <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
                            <!-- include_spec =                                               -->
                            <!--   DimensionSpec(                                             -->
                            <!--     element_name='is_instant',                               -->
                            <!--     entity_links=(EntityReference(element_name='booking'),), -->
                            <!--   )                                                          -->
                            <!-- distinct = False -->
                            <MetricTimeDimensionTransformNode>
                                <!-- description = "Metric Time Dimension 'ds'" -->
                                <!-- node_id = NodeId(id_str='sma_28009') -->
                                <!-- aggregation_time_dimension = 'ds' -->
                                <ReadSqlSourceNode>
                                    <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                    <!-- node_id = NodeId(id_str='rss_28020') -->
                                    <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                </ReadSqlSourceNode>
                            </MetricTimeDimensionTransformNode>
                        </FilterElementsNode>
                    </AggregateSimpleMetricInputsNode>
                </ComputeMetricsNode>
            </ComputeMetricsNode>
        </CombineAggregatedOutputsNode>
    </WriteToResultDataTableNode>
</DataflowPlan>
