test_name: test_shared_metric_query
test_filename: test_common_dataflow_branches.py
docstring:
  For a known case, test that a metric computation node is identified as a common branch.

      A query for `bookings` and `bookings_per_booker` should have the computation for `bookings` as a common branch in
      the dataflow plan.
---
dataflow_plan:
  <DataflowPlan>
      <WriteToResultDataTableNode>
          <!-- description = 'Write to DataTable' -->
          <!-- node_id = NodeId(id_str='wrd_0') -->
          <CombineAggregatedOutputsNode>
              <!-- description = 'Combine Aggregated Outputs' -->
              <!-- node_id = NodeId(id_str='cao_1') -->
              <ComputeMetricsNode>
                  <!-- description = 'Compute Metrics via Expressions' -->
                  <!-- node_id = NodeId(id_str='cm_0') -->
                  <!-- metric_spec = MetricSpec(element_name='bookings') -->
                  <AggregateSimpleMetricInputsNode>
                      <!-- description = 'Aggregate Measures' -->
                      <!-- node_id = NodeId(id_str='am_0') -->
                      <!-- alias_mapping = {} -->
                      <!-- null_fill_value_mapping = {} -->
                      <FilterElementsNode>
                          <!-- description = "Pass Only Elements: ['bookings', 'metric_time__day']" -->
                          <!-- node_id = NodeId(id_str='pfe_0') -->
                          <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
                          <!-- include_spec =                                                                  -->
                          <!--   TimeDimensionSpec(                                                            -->
                          <!--     element_name='metric_time',                                                 -->
                          <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                          <!--   )                                                                             -->
                          <!-- distinct = False -->
                          <MetricTimeDimensionTransformNode>
                              <!-- description = "Metric Time Dimension 'ds'" -->
                              <!-- node_id = NodeId(id_str='sma_28009') -->
                              <!-- aggregation_time_dimension = 'ds' -->
                              <ReadSqlSourceNode>
                                  <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                  <!-- node_id = NodeId(id_str='rss_28020') -->
                                  <!-- data_set = SemanticModelDataSet('bookings_source') -->
                              </ReadSqlSourceNode>
                          </MetricTimeDimensionTransformNode>
                      </FilterElementsNode>
                  </AggregateSimpleMetricInputsNode>
              </ComputeMetricsNode>
              <ComputeMetricsNode>
                  <!-- description = 'Compute Metrics via Expressions' -->
                  <!-- node_id = NodeId(id_str='cm_2') -->
                  <!-- metric_spec = MetricSpec(element_name='bookings_per_booker') -->
                  <CombineAggregatedOutputsNode>
                      <!-- description = 'Combine Aggregated Outputs' -->
                      <!-- node_id = NodeId(id_str='cao_0') -->
                      <ComputeMetricsNode>
                          <!-- description = 'Compute Metrics via Expressions' -->
                          <!-- node_id = NodeId(id_str='cm_0') -->
                          <!-- metric_spec = MetricSpec(element_name='bookings') -->
                          <AggregateSimpleMetricInputsNode>
                              <!-- description = 'Aggregate Measures' -->
                              <!-- node_id = NodeId(id_str='am_0') -->
                              <!-- alias_mapping = {} -->
                              <!-- null_fill_value_mapping = {} -->
                              <FilterElementsNode>
                                  <!-- description = "Pass Only Elements: ['bookings', 'metric_time__day']" -->
                                  <!-- node_id = NodeId(id_str='pfe_0') -->
                                  <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
                                  <!-- include_spec =                                                                  -->
                                  <!--   TimeDimensionSpec(                                                            -->
                                  <!--     element_name='metric_time',                                                 -->
                                  <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                                  <!--   )                                                                             -->
                                  <!-- distinct = False -->
                                  <MetricTimeDimensionTransformNode>
                                      <!-- description = "Metric Time Dimension 'ds'" -->
                                      <!-- node_id = NodeId(id_str='sma_28009') -->
                                      <!-- aggregation_time_dimension = 'ds' -->
                                      <ReadSqlSourceNode>
                                          <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                          <!-- node_id = NodeId(id_str='rss_28020') -->
                                          <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                      </ReadSqlSourceNode>
                                  </MetricTimeDimensionTransformNode>
                              </FilterElementsNode>
                          </AggregateSimpleMetricInputsNode>
                      </ComputeMetricsNode>
                      <ComputeMetricsNode>
                          <!-- description = 'Compute Metrics via Expressions' -->
                          <!-- node_id = NodeId(id_str='cm_1') -->
                          <!-- metric_spec = MetricSpec(element_name='bookers') -->
                          <AggregateSimpleMetricInputsNode>
                              <!-- description = 'Aggregate Measures' -->
                              <!-- node_id = NodeId(id_str='am_1') -->
                              <!-- alias_mapping = {} -->
                              <!-- null_fill_value_mapping = {} -->
                              <FilterElementsNode>
                                  <!-- description = "Pass Only Elements: ['bookers', 'metric_time__day']" -->
                                  <!-- node_id = NodeId(id_str='pfe_1') -->
                                  <!-- include_spec = SimpleMetricInputSpec(element_name='bookers') -->
                                  <!-- include_spec =                                                                  -->
                                  <!--   TimeDimensionSpec(                                                            -->
                                  <!--     element_name='metric_time',                                                 -->
                                  <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
                                  <!--   )                                                                             -->
                                  <!-- distinct = False -->
                                  <MetricTimeDimensionTransformNode>
                                      <!-- description = "Metric Time Dimension 'ds'" -->
                                      <!-- node_id = NodeId(id_str='sma_28009') -->
                                      <!-- aggregation_time_dimension = 'ds' -->
                                      <ReadSqlSourceNode>
                                          <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                                          <!-- node_id = NodeId(id_str='rss_28020') -->
                                          <!-- data_set = SemanticModelDataSet('bookings_source') -->
                                      </ReadSqlSourceNode>
                                  </MetricTimeDimensionTransformNode>
                              </FilterElementsNode>
                          </AggregateSimpleMetricInputsNode>
                      </ComputeMetricsNode>
                  </CombineAggregatedOutputsNode>
              </ComputeMetricsNode>
          </CombineAggregatedOutputsNode>
      </WriteToResultDataTableNode>
  </DataflowPlan>

common_branch_0:
  <ComputeMetricsNode>
      <!-- description = 'Compute Metrics via Expressions' -->
      <!-- node_id = NodeId(id_str='cm_0') -->
      <!-- metric_spec = MetricSpec(element_name='bookings') -->
      <AggregateSimpleMetricInputsNode>
          <!-- description = 'Aggregate Measures' -->
          <!-- node_id = NodeId(id_str='am_0') -->
          <!-- alias_mapping = {} -->
          <!-- null_fill_value_mapping = {} -->
          <FilterElementsNode>
              <!-- description = "Pass Only Elements: ['bookings', 'metric_time__day']" -->
              <!-- node_id = NodeId(id_str='pfe_0') -->
              <!-- include_spec = SimpleMetricInputSpec(element_name='bookings') -->
              <!-- include_spec =                                                                  -->
              <!--   TimeDimensionSpec(                                                            -->
              <!--     element_name='metric_time',                                                 -->
              <!--     time_granularity=ExpandedTimeGranularity(name='day', base_granularity=DAY), -->
              <!--   )                                                                             -->
              <!-- distinct = False -->
              <MetricTimeDimensionTransformNode>
                  <!-- description = "Metric Time Dimension 'ds'" -->
                  <!-- node_id = NodeId(id_str='sma_28009') -->
                  <!-- aggregation_time_dimension = 'ds' -->
                  <ReadSqlSourceNode>
                      <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
                      <!-- node_id = NodeId(id_str='rss_28020') -->
                      <!-- data_set = SemanticModelDataSet('bookings_source') -->
                  </ReadSqlSourceNode>
              </MetricTimeDimensionTransformNode>
          </FilterElementsNode>
      </AggregateSimpleMetricInputsNode>
  </ComputeMetricsNode>

common_branch_1:
  <MetricTimeDimensionTransformNode>
      <!-- description = "Metric Time Dimension 'ds'" -->
      <!-- node_id = NodeId(id_str='sma_28009') -->
      <!-- aggregation_time_dimension = 'ds' -->
      <ReadSqlSourceNode>
          <!-- description = "Read From SemanticModelDataSet('bookings_source')" -->
          <!-- node_id = NodeId(id_str='rss_28020') -->
          <!-- data_set = SemanticModelDataSet('bookings_source') -->
      </ReadSqlSourceNode>
  </MetricTimeDimensionTransformNode>
